In Non Linear Data Structure we have
    1)Trees
    2)Graphs
    
1)Trees
    A tree is a hierarchical structure where data is organized hierarchically and are linked together. 
    This structure is different from a linked list whereas, in a linked list, items are linked in a linear order.
    Various types of trees have been developed throughout the past decades, in order to suit certain applications and meet certain constraints. 
    Some examples are binary search tree, B tree, treap, red-black tree, splay tree, AVL tree and n-ary tree.
    
    
    Binary Search Trees
        A binary search tree (BST), as the name suggests, is a binary tree where data is organized in a hierarchical structure. 
        This data structure stores values in sorted order.
        
    Applications of trees
        Binary Trees: Used to implement expression parsers and expression solvers.
        Binary Search Tree: used in many search applications where data are constantly entering and leaving.
        Heaps: used by JVM (Java Virtual Machine) to store Java objects.
        Treaps: used in wireless networking.
        
2)Graphs
      A graph consists of a finite set of vertices or nodes and a set of edges connecting these vertices.
      The order of a graph is the number of vertices in the graph. The size of a graph is the number of edges in the graph.
      Two nodes are said to be adjacent if they are connected to each other by the same edge.
    Directed Graphs
          A graph G is said to be a directed graph if all its edges have a direction indicating what is the start vertex and what is the end vertex.
          We say that (u, v) is incident from or leaves vertex u and is incident to or enters vertex v.
          Self-loops: Edges from a vertex to itself.
    Undirected Graphs
          A graph G is said to be an undirected graph if all its edges have no direction. It can go in both ways between the two vertices.
          If a vertex is not connected to any other node in the graph, it is said to be isolated.
          
   Applications of graphs
          Used to represent social media networks. Each user is a vertex, and when users connect they create an edge.
          Used to represent web pages and links by search engines. Web pages on the internet are linked to each other by hyperlinks. Each page is a vertex and the hyperlink between two pages is an edge. Used for Page Ranking in Google.
          Used to represent locations and routes in GPS. Locations are vertices and the routes connecting locations are edges. Used to calculate the shortest route between two locations.
