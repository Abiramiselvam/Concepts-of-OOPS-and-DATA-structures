1.What is an object?
Object is an encapsulation of data along with functions that act upon that data.

An object consists of:
1.Name -- the variable name we give it
2.Member data -- the data that describes the object
3.Member functions -- behavior aspects of the object (functions related to the object itself)

Real time examples
If we consider the real-world, we can find many objects around us, cars, dogs, humans, etc. All these objects have a state and a behavior.

If we consider a dog, then its state is - name, breed, color, and the behavior is - barking, wagging the tail, running.

If you compare the software object with a real-world object, they have very similar characteristics.

Software objects also have a state and a behavior. A software object's state is stored in fields and behavior is shown via methods.

2.What is class?
Class -- a blueprint for objects. A class is a user-defined type that describes what a certain type of object will look like. A class description consists of a declaration and a definition. Usually these pieces are split into separate files.
An object is a single instance of a class. You can create many objects from the same class type.

Real time examples
we can consider a car as a class that has characteristics like steering wheels, seats, brakes, etc. And its behavior is mobility. But we can say Honda City having a reg.number 4654 is an ‘object’ that belongs to the class ‘car’.

Class Declaration Format:
 class <className> 
 { 
 public: 
     (public member data and functions go here) 
 private:
     (private member data and functions go here) 

 }; 
